// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "db_clientes",
    columns: [
      { name: "CLIENTE", type: "string" },
      { name: "COD", type: "int" },
      { name: "CIDADE", type: "string" },
    ],
  },
  {
    name: "products",
    columns: [
      {
        name: "product_name",
        type: "string",
        notNull: true,
        defaultValue: "null",
      },
      { name: "img", type: "file", file: { defaultPublicAccess: true } },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://crokids-s-workspace-iltlld.us-west-2.xata.sh/db/digel-db",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
